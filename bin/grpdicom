#!/usr/bin/env python
"""
Groups DICOM files into directories by series.
"""

import sys
import os
import getopt
from qipipe.staging import group_dicom_files

import logging
logger = logging.getLogger('qipipe')

help_message = """
grpdicom options DIR...
Options:
    -C --changeto\tChange to the given target directory
    -d --dicom\tThe source DICOM file name pattern
    -p --session\tThe source session subdirectory pattern
    -r --replace\tReplace the existing target image file links
    -t --delta\tThe delta directory to hold new target session directories
    -f --file\tA file containing the source subject directories
    -q, --quiet\tSuppress messages
    -v, --verbose\tPrint verbose messages
    -h --help\tPrint this help message
"""


class Usage(Exception):

    def __init__(self, msg):
        self.msg = msg


def main(argv=None):
    if argv is None:
        argv = sys.argv
    try:
        try:
            opts, args = getopt.getopt(argv[1:], 'C:i:p:rt:hf:qv', ['changeto=', 'dicom=', 'session=', 'replace', 'delta=', 'help', 'file=', 'quiet' , 'verbose'])
        except getopt.error, msg:
            raise Usage(msg)

        target = delta = None
        # the group options
        gopts = {}
        # option processing
        for option, value in opts:
            if option in ('-C', '--changeto'):
                gopts['dest'] = value
            elif option in ('-h', '--help'):
                print help_message
                return 0
            elif option in ('-d', '--dicom'):
                gopts['dicom_pat'] = value
            elif option in ('-p', '--session'):
                gopts['session_pat'] = value
            elif option in ('-r', '--replace'):
                gopts['replace'] = True
            elif option in ('-t', '--delta'):
                gopts['delta'] = value
            elif option in ('-q', '--quiet'):
                logger.setLevel('ERROR')
            elif option in ('-v', '--verbose'):
                logger.setLevel('DEBUG')
            elif option in ('-f', '--file'):
                farg = value
                if farg == '-':
                    fs = sys.stdin
                else:
                    fs = open(farg)
                args[:] = [s.strip() for s in fs.readlines()]
        args.append(gopts)

        staging.group_dicom_files(*args)

    except Usage, err:
        print >> sys.stderr, sys.argv[0].split('/')[-1] + ': ' + str(err.msg)
        return 2

    return 0

if __name__ == '__main__':
    sys.exit(main())
